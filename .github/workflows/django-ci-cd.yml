name: CI Pipeline

on: [push, pull_request]

jobs:
  test-lint:
    name: Test and Lint
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/requirements.txt', '**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Test
        run: |
          docker compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/test_db

      - name: Lint
        run: |
          docker compose run --rm app sh -c "flake8 --config=.flake8 || echo 'Linting failed'"
        continue-on-error: true

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            test-reports/
            coverage.xml